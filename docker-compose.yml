services:
  app:
    container_name: app
    build:
      context: .
    ports:
      - "8001:8001"
    volumes:
      - ./core:/core
      - ./data/web/static:/data/web/static/
      - ./data/web/media:/data/web/media/
    env_file:
      - ./dotenv_files/.env
    depends_on:
      app-rabbitmq:
        condition: service_healthy
      app-psql:
        condition: service_started
    command: /scripts/runserver.sh
    networks:
      - joao-soares

  app-celery:
    container_name: app-celery
    build:
      context: .
    volumes:
      - ./core:/core
    env_file:
      - ./dotenv_files/.env
    depends_on:
      app-rabbitmq:
        condition: service_healthy
      app-psql:
        condition: service_started
    command: celery -A config worker -l info
    networks:
      - joao-soares

  app-psql:
    container_name: app-psql
    image: postgres:13-alpine
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data/
    env_file:
      - ./dotenv_files/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - joao-soares

  app-rabbitmq:
    image: "rabbitmq:3-management"
    container_name: app-rabbitmq
    hostname: "rabbit"
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - joao-soares

networks:
  joao-soares:
    driver: bridge